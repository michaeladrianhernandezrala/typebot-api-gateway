openapi: '3.0.2'
info:
  title: API Title
  version: '1.0'
tags:
  - name: auth
paths:
  /auth/register:
    post:
      tags:
        - "auth"
      x-eov-operation-handler: authController
      operationId: postRegisterUser
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                lastname: 
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: Ok
                  data:
                    type: object
                    properties:
                      id: 
                        type: integer
                      name:
                        type: string
                      lastname:
                        type: string
                      createdAt:
                        type: string
                      updatedAt: 
                        type: string
                      accountId:
                        type: integer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    type: string
                  errorCode:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: Unauhtorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message: 
                    type: string
                  errorCode:
                    type: string
                    example: UNAUTHORIZED
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 403
                  message:
                    type: string
                  errorCode:
                    type: string
                    example: FORBIDDEN
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                  errorCode:
                    type: string
                    example: NOT_FOUND
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    type: string
                  errorCode:
                    type: string
                    example: INTERNAL_SERVER_ERROR